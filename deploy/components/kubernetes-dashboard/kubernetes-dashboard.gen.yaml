apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-metrics-scraper
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-web
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-api
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubernetes-dashboard-metrics-scraper
  - http:kubernetes-dashboard-metrics-scraper
  resources:
  - services/proxy
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-web
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubernetes-dashboard-web-settings
  resources:
  - configmaps
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-metrics-scraper
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard-api
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard-api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-web
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard-web
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard-web
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-metrics-scraper
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dashboard-metrics-scraper
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard-metrics-scraper
  namespace: kubernetes-dashboard
---
apiVersion: v1
data: null
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-web-settings
---
apiVersion: v1
data:
  private.key: MnI1TUlNSnJUMUZSaDRvNGpiSDdWanVzeWV2eFQrcWtzTmhGUCtSK2NEc3BoRGMwOSt6Y3hYeHJOQTdIekU3WDZvL2RXS1dVVW5HYUJKcy9EelFVRTVVWlNKbEg0T1NXajFCK1ozcHZCZ09JVEM3ZGJTN29rNXovVXIvRktsNkxmMC9idjBoSXhHSEM3ZVZjWVNoZUUzQ2xzenBHeXhxd3Q3T1FPZVI2enRwODBnME5FampvVzlMaVdFZGc0LzhKSEd5TCt3bVRkVDNQTW5RVHdQV25WZzA3eklLQ01FOUc1dnpaYmR5MG5LcUtjRTZZUERqWE1mMWpLRWRCcXRGVHhMNUhGalNNWXNJQkhka2JLSzJJMnNrVWxQMGgzVzFWR3NMWlBYYUI1eEVWbXRzVkpiaFFxeUl2UVRveU9zRkZpOVJDNElZS08xOWFidjRnd3N4TVB3PT0=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-csrf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-api
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.13.0
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-api
spec:
  ports:
  - name: api
    port: 8000
    protocol: TCP
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-api
    app.kubernetes.io/part-of: kubernetes-dashboard
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: auth
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-auth
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-auth
spec:
  ports:
  - name: auth
    port: 8000
    protocol: TCP
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-auth
    app.kubernetes.io/part-of: kubernetes-dashboard
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metrics-scraper
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.2.2
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-metrics-scraper
spec:
  ports:
  - port: 8000
    protocol: TCP
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: web
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-web
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-web
spec:
  ports:
  - name: web
    port: 8000
    protocol: TCP
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-web
    app.kubernetes.io/part-of: kubernetes-dashboard
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-api
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.13.0
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-api
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-api
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations:
        checksum/config: 2c230a5f77da16020279febf8a8ed0cee950870036ec975a0c43a1295993d9de
      labels:
        app.kubernetes.io/component: api
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-dashboard-api
        app.kubernetes.io/part-of: kubernetes-dashboard
        app.kubernetes.io/version: 1.13.0
        helm.sh/chart: kubernetes-dashboard-7.13.0
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --namespace=kubernetes-dashboard
        - --metrics-scraper-service-name=kubernetes-dashboard-metrics-scraper
        env:
        - name: CSRF_KEY
          valueFrom:
            secretKeyRef:
              key: private.key
              name: kubernetes-dashboard-csrf
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-api:1.13.0
        imagePullPolicy: IfNotPresent
        name: kubernetes-dashboard-api
        ports:
        - containerPort: 8000
          name: api
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard-api
      volumes:
      - emptyDir: {}
        name: tmp-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: auth
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-auth
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.13.0
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-auth
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-auth
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations:
        checksum/config: 12aa66328b5309ffbbaa5b34747ade28c68fbbbb7b142c9241423dbff66099e0
      labels:
        app.kubernetes.io/component: auth
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-dashboard-auth
        app.kubernetes.io/part-of: kubernetes-dashboard
        app.kubernetes.io/version: 1.3.0
        helm.sh/chart: kubernetes-dashboard-7.13.0
    spec:
      automountServiceAccountToken: true
      containers:
      - args: null
        env:
        - name: CSRF_KEY
          valueFrom:
            secretKeyRef:
              key: private.key
              name: kubernetes-dashboard-csrf
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-auth:1.3.0
        imagePullPolicy: IfNotPresent
        name: kubernetes-dashboard-auth
        ports:
        - containerPort: 8000
          name: auth
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - emptyDir: {}
        name: tmp-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: metrics-scraper
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.2.2
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-metrics-scraper
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: metrics-scraper
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
        app.kubernetes.io/part-of: kubernetes-dashboard
        app.kubernetes.io/version: 1.2.2
        helm.sh/chart: kubernetes-dashboard-7.13.0
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-metrics-scraper:1.2.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: kubernetes-dashboard-metrics-scraper
        ports:
        - containerPort: 8000
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard-metrics-scraper
      volumes:
      - emptyDir: {}
        name: tmp-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: web
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-web
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-dashboard-7.13.0
  name: kubernetes-dashboard-web
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-web
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: web
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-dashboard-web
        app.kubernetes.io/part-of: kubernetes-dashboard
        app.kubernetes.io/version: 1.7.0
        helm.sh/chart: kubernetes-dashboard-7.13.0
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --namespace=kubernetes-dashboard
        - --settings-config-map-name=kubernetes-dashboard-web-settings
        env:
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-web:1.7.0
        imagePullPolicy: IfNotPresent
        name: kubernetes-dashboard-web
        ports:
        - containerPort: 8000
          name: web
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard-web
      volumes:
      - emptyDir: {}
        name: tmp-volume
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: kubernetes_dashboard
  namespace: kubernetes-dashboard
spec:
  hostnames:
  - kubernetes.localhost
  parentRefs:
  - name: traefik-gateway
    namespace: gateway
  rules:
  - backendRefs:
    - kind: Service
      name: kubernetes-dashboard-web
      port: 8000

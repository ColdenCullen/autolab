apiVersion: v1
kind: Namespace
metadata:
  name: dns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: coredns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: coredns
    helm.sh/chart: coredns-1.42.2
  name: coredns
  namespace: dns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: coredns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: coredns
    helm.sh/chart: coredns-1.42.2
  name: coredns
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gateway
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  - gatewayclasses
  - httproutes
  - tlsroutes
  - grpcroutes
  verbs:
  - watch
  - list
- apiGroups:
  - externaldns.k8s.io
  resources:
  - dnsendpoints
  verbs:
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: coredns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: coredns
    helm.sh/chart: coredns-1.42.2
  name: coredns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: coredns
subjects:
- kind: ServiceAccount
  name: coredns
  namespace: dns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gateway
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gateway
subjects:
- kind: ServiceAccount
  name: coredns
---
apiVersion: v1
data:
  Corefile: |-
    dns://.:53 {
        any
        debug
        errors
        health
        ready
        prometheus 0.0.0.0:9153
        loadbalance
        k8s_gateway localhost {
            resources HTTPRoute
        }
        cache 30 localhost
        forward ballard.coldencullen.com 10.0.1.1
        forward mission.coldencullen.com 10.1.1.1
        forward . tls://1.1.1.1 tls://1.0.0.1 {
            tls
            tls_servername one.one.one.one
        }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: coredns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: coredns
    helm.sh/chart: coredns-1.42.2
  name: coredns
  namespace: dns
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: coredns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: coredns
    helm.sh/chart: coredns-1.42.2
  name: coredns
  namespace: dns
spec:
  loadBalancerIP: 10.42.42.0
  ports:
  - name: udp-53
    port: 53
    protocol: UDP
    targetPort: 53
  - name: tcp-53
    port: 53
    protocol: TCP
    targetPort: 53
  selector:
    app.kubernetes.io/instance: coredns
    app.kubernetes.io/name: coredns
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: coredns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: coredns
    app.kubernetes.io/version: 1.2.1_sha256-7830e736192ec17039a0c6f5302d025e93cc323b15b8e74c69
    helm.sh/chart: coredns-1.42.2
  name: coredns
  namespace: dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: coredns
      app.kubernetes.io/name: coredns
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: f7e8ad01ac7088c2c18b9afe5a415c9900756f3099b91c41a761b67e8822c653
      labels:
        app.kubernetes.io/instance: coredns
        app.kubernetes.io/name: coredns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: ghcr.io/k8s-gateway/k8s_gateway:1.2.1@sha256:7830e736192ec17039a0c6f5302d025e93cc323b15b8e74c69fcdeb895062a5b
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: udp-53
          protocol: UDP
        - containerPort: 53
          name: tcp-53
          protocol: TCP
        - containerPort: 9153
          name: tcp-9153
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume

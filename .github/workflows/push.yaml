name: On Commit CI
on:
  - push

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  tilt-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Check Latest Homebrew
        id: brew-version
        run: echo version=$(gh api repos/Homebrew/brew/releases -q '.[0].tag_name') >> "$GITHUB_OUTPUT"

      - name: Cache Homebrew
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        id: cache-brew
        with:
          path: /home/linuxbrew/.linuxbrew
          key: ${{ runner.os }}-${{ steps.brew-version.outputs.version }}

      - name: Install Homebrew
        if: steps.cache-brew.outputs.cache-hit != 'true'
        run: bash -c "CI=1 $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Setup Homebrew (pt 1)
        run: /home/linuxbrew/.linuxbrew/bin/brew shellenv --shell=bash | grep HOMEBREW_ | cut -d' ' -f2- | cut -d';' -f1 >> "$GITHUB_ENV"

      - name: Setup Homebrew (pt 2)
        run: echo ${{ env.HOMEBREW_PREFIX }}/bin:${{ env.HOMEBREW_PREFIX }}/sbin >> "$GITHUB_PATH"

      - name: Cache Homebew Bundle
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        id: cache-bundle
        with:
          path: |
            ${{ env.HOMEBREW_CELLAR }}
            ${{ env.HOMEBREW_PREFIX }}/bin
            ${{ env.HOMEBREW_PREFIX }}/sbin
          key: ${{ runner.os }}-${{ steps.brew-version.outputs.version }}-${{ hashFiles('Brewfile') }}

      - name: Install Homebrew Bundle
        if: steps.cache-bundle.outputs.cache-hit != 'true'
        run: brew bundle install

      - name: Setup Cluster
        run: ctlptl apply -f cluster-kind.yaml

      - name: Run Tilt CI
        run: tilt ci

      - name: Reset Cluster
        run: ctltpl delete -f cluster-kind.yaml && ctltpl apply -f cluster-kind.yaml

      - name: Run Tilt CI (Flux Mode)
        run: tilt ci -- --flux-mode
